#include <iostream>#include "../items/weapons.h"#include "event_weapon.h"#include "../sprites/babar.h"#include "../util/collisions.h"#include "../util/debug.h"#include "../util/globals.h"Event_weapon::Event_weapon(Babar *target) : Event_item(target){	PRINT_CONSTR(3, "Construction d'un event_weapon");	m_pos.x = target->position_x() + 400;	m_pos.y = 1500;	m_pos.h = 50;	m_pos.w = 50;	m_weapon_type =  SHOTGUN;	m_can_be_destroyed = false;	std::string chemin = RAC + std::string("/pic/items/heart.bmp");	m_picture = SDL_LoadBMP(chemin.c_str());	SDL_SetColorKey(m_picture, SDL_SRCCOLORKEY, SDL_MapRGB(m_picture->format, 0, 0, 255));}Event_weapon::~Event_weapon(){	PRINT_CONSTR(3, "Destruction d'un event_weapon");}//~ void Event_weapon::update()//~ {//~ 	m_phase++;//~ 	if ((m_phase/5)%2)//~ 		m_pos.y += 5;//~ 	else//~ 		m_pos.y -= 5;//~ }//~ bool Event_weapon::can_start()//~ {//~ 	return check_collision(m_pos, m_target->position());//~ }void Event_weapon::start(){	m_can_be_destroyed = true;	m_target->change_weapon(m_weapon_type);}//~ void Event_weapon::destroy()//~ {//~ 	//~ }SDL_Surface *Event_weapon::current_picture(){	return m_picture;}//~ SDL_Rect Event_weapon::current_pos()//~ {//~ 	return m_pos;//~ }