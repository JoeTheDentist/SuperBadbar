#include <iostream>#include <SDL/SDL.h>#include <stdint.h>#include "camera.h"#include "globals.h"Camera::Camera(){}Camera::Camera(Sprite *cible){	m_cible = cible;	m_frame.h = window_height;	m_frame.w = window_weight;	}Camera::~Camera(){	}void Camera::update_pos(){	SDL_Rect position_cible = m_cible->position();	m_frame.x = position_cible.x + (position_cible.w / 2) - (m_frame.w / 2);	m_frame.y = position_cible.y + (position_cible.h / 2) - (m_frame.h / 2);	if (m_frame.x < 0) 		m_frame.x = 0;	if (m_frame.y < 0)		m_frame.y = 0;	if (m_frame.x > m_frame.w)		m_frame.x = m_frame.w;	if (m_frame.y > m_frame.h)		m_frame.y = m_frame.h;}void Camera::display_sprite(Sprite *sprite){	SDL_Rect pos_sprite = sprite->position();	pos_sprite.x -= m_frame.x;	pos_sprite.y -= m_frame.y;	SDL_BlitSurface(sprite->current_picture(), NULL, screen, &pos_sprite);	}SDL_Rect Camera::frame(){	return m_frame;}